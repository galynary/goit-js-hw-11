{"mappings":"AA6DA,MAAMA,EAAa,IA7DnB,MAMEC,QACEC,KAAKC,aAAe,GACpBD,KAAKE,cAAgB,GACrBF,KAAKG,SAAW,KAChBH,KAAKI,c,CAGPC,aAAaC,GACI,MAAXA,GAAkBN,KAAKC,aAAaM,SAAS,OACjDP,KAAKC,cAAgBK,EAAOE,WAC5BR,KAAKI,e,CAGPK,eAAeN,GACa,KAAtBH,KAAKC,eACkB,KAAvBD,KAAKE,eACPF,KAAKU,YAEPV,KAAKG,SAAWA,EAChBH,KAAKE,cAAgBF,KAAKC,aAC1BD,KAAKC,aAAe,G,CAGtBS,YACE,IAAIC,EACJ,MAAMC,EAAOC,WAAWb,KAAKE,eACvBY,EAAUD,WAAWb,KAAKC,cAChC,IAAIc,MAAMH,KAASG,MAAMD,GAAzB,CACA,OAAQd,KAAKG,UACX,IAAK,IACHQ,EAASC,EAAOE,EAChB,MACF,IAAK,IACHH,EAASC,EAAOE,EAChB,MACF,IAAK,IACHH,EAASC,EAAOE,EAChB,MACF,IAAK,IACHH,EAASC,EAAOE,EAChB,MACF,QACE,OAEJd,KAAKC,aAAeU,EACpBX,KAAKG,SAAW,KAChBH,KAAKE,cAAgB,GACrBF,KAAKI,cApB8B,C,CAuBrCA,eACEJ,KAAKgB,cAAcC,MAAQjB,KAAKC,Y,CAxDlCiB,YAAYF,GACVhB,KAAKgB,cAAgBA,EACrBhB,KAAKD,O,GA0DyBoB,SAASC,cAAc,YAEzDD,SAASC,cAAc,oBAAoBC,iBAAiB,SAASC,IACnE,MAAMC,EAASD,EAAMC,OACfN,EAAQM,EAAON,MACrB,GAAKM,EAAOC,QAAQ,UAEpB,OAAQD,EAAOE,UAAU,IACvB,IAAK,WACH3B,EAAWW,eAAeQ,GAC1B,MACF,IAAK,UASL,QACEnB,EAAWO,aAAaY,SAP1B,IAAK,YACHnB,EAAWC,QACX,MACF,IAAK,aACHD,EAAWY,Y","sources":["src/index.js"],"sourcesContent":["class Calculator {\n  constructor(screenElement) {\n    this.screenElement = screenElement;\n    this.reset();\n  }\n\n  reset() {\n    this.currentValue = '';\n    this.previousValue = '';\n    this.operator = null;\n    this.updateScreen();\n  }\n\n  appendNumber(number) {\n    if (number === '.' && this.currentValue.includes('.')) return;\n    this.currentValue += number.toString();\n    this.updateScreen();\n  }\n\n  chooseOperator(operator) {\n    if (this.currentValue === '') return;\n    if (this.previousValue !== '') {\n      this.calculate();\n    }\n    this.operator = operator;\n    this.previousValue = this.currentValue;\n    this.currentValue = '';\n  }\n\n  calculate() {\n    let result;\n    const prev = parseFloat(this.previousValue);\n    const current = parseFloat(this.currentValue);\n    if (isNaN(prev) || isNaN(current)) return;\n    switch (this.operator) {\n      case '+':\n        result = prev + current;\n        break;\n      case '-':\n        result = prev - current;\n        break;\n      case '*':\n        result = prev * current;\n        break;\n      case '/':\n        result = prev / current;\n        break;\n      default:\n        return;\n    }\n    this.currentValue = result;\n    this.operator = null;\n    this.previousValue = '';\n    this.updateScreen();\n  }\n\n  updateScreen() {\n    this.screenElement.value = this.currentValue;\n  }\n}\n\nconst calculator = new Calculator(document.querySelector('#screen'));\n\ndocument.querySelector('.calculator-keys').addEventListener('click', event => {\n  const target = event.target;\n  const value = target.value;\n  if (!target.matches('button')) return;\n\n  switch (target.classList[0]) {\n    case 'operator':\n      calculator.chooseOperator(value);\n      break;\n    case 'decimal':\n      calculator.appendNumber(value);\n      break;\n    case 'all-clear':\n      calculator.reset();\n      break;\n    case 'equal-sign':\n      calculator.calculate();\n      break;\n    default:\n      calculator.appendNumber(value);\n  }\n});\n"],"names":["$1f0dc3b9307be026$var$calculator","reset","this","currentValue","previousValue","operator","updateScreen","appendNumber","number","includes","toString","chooseOperator","calculate","result","prev","parseFloat","current","isNaN","screenElement","value","constructor","document","querySelector","addEventListener","event","target","matches","classList"],"version":3,"file":"index.89d15a2e.js.map"}